/** \page rave_cobjects "Rave C Objects"
In the previous chapter we gave a brief overview on how you are supposed to work with the different
support macros and functions we have delivered in the system. Let's take a look at some of the
objects we have at our disposal.

- \ref #RaveDateTime_t
This is a very simple object that provides the user with two different members, time and date.
As is specified in the header file, the date should be specified in the format YYYYMMDD and the
time should be specified in HHmmss. It is quite straight forward in usage.
\verbatim
#include "rave_datetime.h"

static void somefun(void)
{
  RaveDateTime_t* datetime = RAVE_OBJECT_NEW(&RaveDateTime_TYPE);
  if (datetime != NULL) {
    RaveDateTime_setDate(datetime, "20091010");
    RaveDateTime_setTime(datetime, "100000");
  }
  ...
  RAVE_OBJECT_RELEASE(datetime);
}
\endverbatim

What happens if you specify a badly formatted date or time or any other oddity. Try for your self by
checking the return value from \ref #RaveDateTime_setDate and \ref #RaveDateTime_setTime, or you could
read the documentation.

- \ref #RaveData2D_t
This is a bit more interesting object since it provides support for a 2-dimensional data array. It is used
internally by both \ref #PolarScan_t and \ref #Cartesian_t.
When you are using this object you will get basic help on memory allocation, indexing and boundary checks.
\verbatim
#include "rave_data2d.h"

static void somefun(void)
{
  RaveData2D_t* data = RAVE_OBJECT_NEW(&RaveData2D_TYPE);
  if (data != NULL) {
    if (RaveData2D_createData(data, 10, 10, RaveDataType_UCHAR)) {
      RaveData2D_setValue(data, 2, 2, 10.0);
    }
  }
  RAVE_OBJECT_RELEASE(data);
}
\endverbatim

All setting and getting of data is actually done as doubles and the casting is done inside the functions. So, if you for example
would pass in a double that is > 255 into the above call, then the value in the data array will be set to 255.

T.B.D.

As it is, we have covered the basics and some of the building blocks, let's take a look at an real-life example that was performed
when developing the new version of rave, \ref converting_mean.

*/